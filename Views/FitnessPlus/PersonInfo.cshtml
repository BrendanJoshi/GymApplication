@model PersonalInformationViewModel
    <style>
        :root {
            --primary-color: #4a6fa5;
            --secondary-color: #166088;
            --accent-color: #4fc3f7;
            --light-bg: #f8f9fa;
            --border-color: #dee2e6;
            --text-color: #333;
            --text-light: #6c757d;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f5f5;
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .profile-header {
            display: flex;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .profile-picture {
            width: 200px;
            height: 200px;
            background-color: #eee;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

        .profile-picture img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .profile-picture .initials {
            font-size: 4rem;
            color: #666;
        }

        .profile-info {
            flex: 1;
            padding: 1.5rem;
        }

        .profile-name {
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
            color: var(--secondary-color);
        }

        .profile-contact {
            margin-bottom: 1rem;
        }

        .contact-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
        }

        .contact-item i {
            margin-right: 0.5rem;
            color: var(--accent-color);
        }

        .section {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .section-title {
            color: var(--primary-color);
            border-bottom: 2px solid var(--border-color);
            padding-bottom: 0.5rem;
            margin-bottom: 1.5rem;
            font-size: 1.3rem;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .info-card {
            background-color: var(--light-bg);
            border-radius: 6px;
            padding: 1rem;
            border-left: 4px solid var(--accent-color);
        }

        .info-label {
            font-size: 0.85rem;
            color: var(--text-light);
            margin-bottom: 0.25rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .info-value {
            font-size: 1.1rem;
            font-weight: 500;
        }

        .empty-value {
            color: var(--text-light);
            font-style: italic;
        }

        .physical-stats {
            display: flex;
            gap: 1.5rem;
            margin-top: 1rem;
        }

        .stat-card {
            flex: 1;
            text-align: center;
            background-color: var(--light-bg);
            padding: 1rem;
            border-radius: 8px;
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--secondary-color);
        }

        .stat-label {
            color: var(--text-light);
            font-size: 0.9rem;
        }

        @@media (max-width: 768px) {
            .profile-header {
                flex-direction: column;
            }

            .profile-picture {
                width: 100%;
                height: 250px;
            }

            .grid-container {
                grid-template-columns: 1fr;
            }

            .physical-stats {
                flex-direction: column;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <div class="container">
        <div class="profile-header">
        <div class="profile-picture" style="width: 50px; height: 50px; border-radius: 50%; overflow: hidden; background: #ccc; display: flex; align-items: center; justify-content: center; font-weight: bold; color: #fff; font-size: 20px;">
           
                <img src="@Url.Content(Model.ProfilePicture)" alt="Profile Picture" style="width: 100%; height: 100%; object-fit: cover;" />
            
            

        </div>

            <div class="profile-info">
                <h1 class="profile-name">@Model.FirstName @Model.LastName</h1>
                <div class="profile-contact">
                    <div class="contact-item">
                        <i class="fas fa-phone"></i>
                        <span>@Model.MobileNumber</span>
                    </div>
                    <div class="contact-item">
                        <i class="fas fa-envelope"></i>
                        <span>@Model.Email</span>
                    </div>
                    <div class="contact-item">
                        <i class="fas fa-venus-mars"></i>
                        <span>@Model.GenderName</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="section">
            <h2 class="section-title">Health & Fitness Information</h2>
            <div class="grid-container">
                <div class="info-card">
                    <div class="info-label">Age Group</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.AgeGroupName) ? "Not specified" : Model.AgeGroupName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Body Type</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.BodyTypeName) ? "Not specified" : Model.BodyTypeName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Body Goal</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.BodyGoalName) ? "Not specified" : Model.BodyGoalName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Target Body</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.TargetBodyName) ? "Not specified" : Model.TargetBodyName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Diet Step</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.StepDietName) ? "Not specified" : Model.StepDietName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Water Step</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.StepWaterName) ? "Not specified" : Model.StepWaterName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Workout Step</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.StepWorkoutName) ? "Not specified" : Model.StepWorkoutName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Additional Goal</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.AdditionalGoalName) ? "Not specified" : Model.AdditionalGoalName)</div>
                </div>
                <div class="info-card">
                    <div class="info-label">Workout Frequency</div>
                    <div class="info-value">@(string.IsNullOrEmpty(Model.WorkoutFrequencyName) ? "Not specified" : Model.WorkoutFrequencyName)</div>
                </div>
            </div>
        </div>

        <div class="section">
            <h2 class="section-title">Physical Attributes</h2>
            <div class="physical-stats">
                <div class="stat-card">
                    <div class="stat-value">@(Model.Height > 0 ? Model.Height.ToString() + " cm" : "--")</div>
                    <div class="stat-label">Height</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">@(Model.Weight > 0 ? Model.Weight.ToString() + " kg" : "--")</div>
                    <div class="stat-label">Weight</div>
                </div>
            </div>
        </div>
    </div>
