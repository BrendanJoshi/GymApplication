@model HealthDashboardViewModel

@*
@if (User.IsInRole("Admin"))
{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Fitness Tracking System Dashboard</title>
        <!-- Bootstrap 5 CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <!-- Chart.js -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <!-- Custom CSS -->
        <style>
            .card {
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

            .card-header {
            background-color: #007bff;
            color: white;
            border-radius: 10px 10px 0 0;
            }

            .chart-container {
            position: relative;
            height: 300px;
            margin-bottom: 20px;
            }

            .table-responsive {
            margin-top: 20px;
            }
        </style>
    </head>
    <body>
        @foreach (var item in Model.list)
        {
            <div class="container-fluid">
                <div class="card">
                <div class="card-header">
                    <h2>User Overview</h2>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="card text-center">
                                <div class="card-body">
                                    <h5 class="card-title">Total Users</h5>
                                    <p class="card-text display-4">@item.TotalUser</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card text-center">
                                <div class="card-body">
                                    <h5 class="card-title">Male</h5>
                                    <p class="card-text display-4">@item.Male</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card text-center">
                                <div class="card-body">
                                    <h5 class="card-title">Female</h5>
                                    <p class="card-text display-4">@item.Female</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card text-center">
                                <div class="card-body">
                                    <h5 class="card-title">Others</h5>
                                    <p class="card-text display-4">@item.Others</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Gender and Age Distribution Section -->
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h2>Gender Distribution</h2>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="genderPieChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h2>Age Distribution</h2>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="ageBarChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- BMI and Workout Activity Section -->
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h2>BMI Distribution</h2>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="bmiLineChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h2>Workout Activity</h2>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="workoutBarChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Goals Progress Section -->
            <div class="card">
                <div class="card-header">
                    <h2>Goals Progress</h2>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <h5>Weight Loss</h5>
                            <div class="progress mb-3">
                                <div class="progress-bar" role="progressbar" style="width: 60%;" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100">60%</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <h5>Muscle Gain</h5>
                            <div class="progress mb-3">
                                <div class="progress-bar bg-success" role="progressbar" style="width: 40%;" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100">40%</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <h5>Endurance Training</h5>
                            <div class="progress mb-3">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: 75%;" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- User Activity Table -->
            <div class="card">
                <div class="card-header">
                    <h2>User Activity</h2>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>User ID</th>
                                    <th>Name</th>
                                    <th>Workouts</th>
                                    <th>Calories Burned</th>
                                    <th>Progress</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>1</td>
                                    <td>Samip Bhattarai</td>
                                    <td>15</td>
                                    <td>2000 kcal</td>
                                    <td>60%</td>
                                </tr>
                                <tr>
                                    <td>2</td>
                                    <td>Arnav Shrestha</td>
                                    <td>20</td>
                                    <td>2500 kcal</td>
                                    <td>75%</td>
                                </tr>
                                <tr>
                                    <td>3</td>
                                    <td>Shusmita Poudel</td>
                                    <td>30</td>
                                    <td>2500 kcal</td>
                                    <td>75%</td>
                                </tr>
                                <tr>
                                    <td>4</td>
                                    <td>Rajesh Hamal</td>
                                    <td>100</td>
                                    <td>2500 kcal</td>
                                    <td>Done</td>
                                </tr>
                                <!-- Add more rows dynamically -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        }
        <!-- Chart.js Scripts -->
        <script>
            // Gender Distribution Pie Chart
            const genderPieChart = new Chart(document.getElementById('genderPieChart'), {
                type: 'pie',
                data: {
                    labels: ['Male', 'Female', 'Other'],
                    datasets: [{
                        label: 'Gender Distribution',
                        data: [120, 70, 10], // Example data for 200 users
                        backgroundColor: ['#007bff', '#dc3545', '#ffc107'],
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });

            // Age Distribution Bar Chart
            const ageBarChart = new Chart(document.getElementById('ageBarChart'), {
                type: 'bar',
                data: {
                    labels: ['18-25', '26-35', '36-45', '46+'],
                    datasets: [{
                        label: 'Number of Users',
                        data: [50, 90, 40, 20], // Example data for 200 users
                        backgroundColor: '#28a745',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });

            // BMI Distribution Line Chart
            const bmiLineChart = new Chart(document.getElementById('bmiLineChart'), {
                type: 'line',
                data: {
                    labels: ['Underweight', 'Normal', 'Overweight', 'Obese'],
                    datasets: [{
                        label: 'Number of Users',
                        data: [20, 120, 50, 10], // Example data for 200 users
                        borderColor: '#007bff',
                        fill: false,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });

            // Workout Activity Bar Chart
            const workoutBarChart = new Chart(document.getElementById('workoutBarChart'), {
                type: 'bar',
                data: {
                    labels: ['Running', 'Cycling', 'Weight Lifting', 'Yoga'],
                    datasets: [{
                        label: 'Number of Users',
                        data: [80, 60, 100, 40], // Example data for 200 users
                        backgroundColor: '#dc3545',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });
        </script>
    </body>
    </html>
} *@
@* else
{
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fitness Tracker Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    :root {
      --bg: #f5f7fa;
      --white: #fff;
      --text: #333;
      --gray: #888;
      --primary: #4CAF50;
      --secondary: #2196F3;
      --rounded: 16px;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: var(--bg);
      color: var(--text);
      padding: 30px;
    }

    h1 {
      text-align: center;
      margin-bottom: 30px;
    }

    .dashboard {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 30px;
    }

    .card {
      background-color: var(--white);
      border-radius: var(--rounded);
      padding: 20px;
      box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    .card h2 {
      font-size: 1.1rem;
      margin-bottom: 20px;
      color: var(--gray);
    }

    .meal-grid {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 10px;
    }

    .meal {
      background-color: #f0f0f0;
      padding: 10px;
      border-radius: 10px;
      text-align: center;
      font-size: 0.85rem;
    }

    .day-label {
      margin-top: 10px;
      font-weight: bold;
    }

    canvas {
      width: 100% !important;
      height: auto !important;
    }

    @@media (max-width: 768px) {
      .meal-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  </style>
</head>
<body>

  <h1>Fitness Tracking Dashboard</h1>

  <div class="dashboard">
    <!-- Pie Chart -->
    <div class="card">
      <h2>Progress Overview</h2>
      <canvas id="progressPie"></canvas>
    </div>

    <!-- Bar Chart -->
    <div class="card">
      <h2>Weekly Activity (Steps)</h2>
      <canvas id="activityBar"></canvas>
    </div>

    <!-- Diet Plan -->
    <div class="card">
      <h2>Diet Plan - Monday</h2>
      <div class="meal-grid">
        <div class="meal">🥣 Breakfast<br>Oats & Fruits</div>
        <div class="meal">🍱 Lunch<br>Chicken Salad</div>
        <div class="meal">🍎 Snack<br>Nuts & Yogurt</div>
        <div class="meal">🍲 Dinner<br>Steamed Veggies</div>
      </div>

      <div class="day-label">Tuesday</div>
      <div class="meal-grid">
        <div class="meal">🥚 Omelette</div>
        <div class="meal">🥗 Quinoa Bowl</div>
        <div class="meal">🍌 Banana & Peanut</div>
        <div class="meal">🍝 Whole Grain Pasta</div>
      </div>
    </div>
  </div>

  <script>
    // Pie Chart
    const ctxPie = document.getElementById('progressPie').getContext('2d');
    new Chart(ctxPie, {
      type: 'doughnut',
      data: {
        labels: ['Weight Loss', 'Muscle Gain', 'Hydration'],
        datasets: [{
          label: 'Fitness Goals',
          data: [45, 35, 20],
          backgroundColor: ['#4CAF50', '#2196F3', '#FFC107'],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    });

    // Bar Chart
    const ctxBar = document.getElementById('activityBar').getContext('2d');
    new Chart(ctxBar, {
      type: 'bar',
      data: {
        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        datasets: [{
          label: 'Steps',
          data: [7500, 8200, 9000, 7000, 8600, 9500, 10000],
          backgroundColor: '#2196F3'
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  </script>

</body>
</html>


} *@

@{
    ViewData["Title"] = "Dashboard";
}

<style>
    .dashboard-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 2rem;
        padding: 2rem;
    }

    .card {
        background-color: #ffffff;
        padding: 1.5rem;
        border-radius: 20px;
        box-shadow: 0 0 20px rgba(0,0,0,0.05);
        transition: transform 0.3s;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    h2 {
        text-align: center;
        font-size: 2rem;
        margin-top: 1rem;
    }

    h3 {
        text-align: center;
        margin-bottom: 1rem;
        color: #333;
    }

    canvas {
        width: 100% !important;
        height: auto !important;
    }
</style>

<h2>📊 Health Progress Dashboard</h2>

<div class="dashboard-container">
    <div class="card">
        <h3>🧁 Calories - Last 7 Days</h3>
        <canvas id="pieChart"></canvas>
    </div>

    <div class="card">
        <h3>📅 Calories Trend</h3>
        <canvas id="barChart"></canvas>
    </div>

    <div class="card">
        <h3>⚖️ Weight Progress</h3>
        <canvas id="lineChart"></canvas>
    </div>

    <div class="card">
        <h3>🍗 Nutrition Balance</h3>
        <canvas id="radarChart"></canvas>
    </div>

    <div class="card">
        <h3>🚶 Steps Taken (Last 7 Days)</h3>
        <canvas id="stepsChart"></canvas>
    </div>

    <div class="card">
        <h3>💪 Chest Progress (Last Month)</h3>
        <canvas id="chestChart"></canvas>
    </div>

    <div class="card">
        <h3>🍽️ Nutrition Progress (Stacked)</h3>
        <canvas id="macroStackChart"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const logs7 = @Html.Raw(Json.Serialize(Model.Last7DaysLogs));
        const logsMonth = @Html.Raw(Json.Serialize(Model.LastMonthLogs));

        const avg = (arr) => arr.reduce((a, b) => a + b, 0) / arr.length || 0;

        // Pie Chart
        new Chart(document.getElementById('pieChart'), {
            type: 'pie',
            data: {
                labels: ['Calories Consumed', 'Calories Burned'],
                datasets: [{
                    data: [
                        logs7.reduce((a, b) => a + (b.calories || 0), 0),
                        logs7.reduce((a, b) => a + (b.caloriesBurned || 0), 0)
                    ],
                    backgroundColor: ['#FF6384', '#36A2EB']
                }]
            }
        });

        // Calories Bar Chart
        new Chart(document.getElementById('barChart'), {
            type: 'bar',
            data: {
                labels: logs7.map(l => new Date(l.date).toLocaleDateString()),
                datasets: [
                    {
                        label: 'Calories Consumed',
                        data: logs7.map(l => l.calories || 0),
                        backgroundColor: '#42A5F5'
                    },
                    {
                        label: 'Calories Burned',
                        data: logs7.map(l => l.caloriesBurned || 0),
                        backgroundColor: '#FFCA28'
                    }
                ]
            }
        });

        // Weight Line Chart
        new Chart(document.getElementById('lineChart'), {
            type: 'line',
            data: {
                labels: logsMonth.map(l => new Date(l.date).toLocaleDateString()),
                datasets: [{
                    label: 'Weight (kg)',
                    data: logsMonth.map(l => l.weightKg || 0),
                    borderColor: '#66BB6A',
                    backgroundColor: '#E8F5E9',
                    tension: 0.3,
                    fill: false
                }]
            }
        });

        // Radar Chart
        new Chart(document.getElementById('radarChart'), {
            type: 'radar',
            data: {
                labels: ['Protein (g)', 'Carbs (g)', 'Fats (g)'],
                datasets: [{
                    label: 'Average Daily Intake',
                    data: [
                        avg(logs7.map(l => l.proteinGrams || 0)),
                        avg(logs7.map(l => l.carbGrams || 0)),
                        avg(logs7.map(l => l.fatGrams || 0))
                    ],
                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                    borderColor: 'rgba(255, 159, 64, 1)',
                    pointBackgroundColor: 'rgba(255, 159, 64, 1)'
                }]
            }
        });

        // Steps Bar Chart
        new Chart(document.getElementById('stepsChart'), {
            type: 'bar',
            data: {
                labels: logs7.map(l => new Date(l.date).toLocaleDateString()),
                datasets: [{
                    label: 'Steps Taken',
                    data: logs7.map(l => l.steps || 0),
                    backgroundColor: '#7E57C2'
                }]
            }
        });

        // Chest Line Chart
        new Chart(document.getElementById('chestChart'), {
            type: 'line',
            data: {
                labels: logsMonth.map(l => new Date(l.date).toLocaleDateString()),
                datasets: [{
                    label: 'Chest (cm)',
                    data: logsMonth.map(l => l.chestCm || 0),
                    borderColor: '#EC407A',
                    backgroundColor: '#FCE4EC',
                    tension: 0.3,
                    fill: false
                }]
            }
        });

        // Combined Protein, Carbs, Fats Stacked Chart
        new Chart(document.getElementById('macroStackChart'), {
            type: 'bar',
            data: {
                labels: logs7.map(l => new Date(l.date).toLocaleDateString()),
                datasets: [
                    {
                        label: 'Protein (g)',
                        data: logs7.map(l => l.proteinGrams || 0),
                        backgroundColor: '#FF7043',
                        stack: 'macros'
                    },
                    {
                        label: 'Carbs (g)',
                        data: logs7.map(l => l.carbGrams || 0),
                        backgroundColor: '#29B6F6',
                        stack: 'macros'
                    },
                    {
                        label: 'Fats (g)',
                        data: logs7.map(l => l.fatGrams || 0),
                        backgroundColor: '#66BB6A',
                        stack: 'macros'
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        stacked: true
                    },
                    y: {
                        stacked: true
                    }
                }
            }
        });
    </script>
}
